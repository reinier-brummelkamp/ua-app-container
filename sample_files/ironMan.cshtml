@{
    Layout = null;
}

<link rel="import" href="@Url.Content("~/lib/polymer/polymer.html")">

<dom-module id="iron-man">
    <style>
        :host {
            flex: 1;
            display: flex;
            display: -webkit-flex;
            -webkit-flex-direction: column;
            flex-direction: column;
        }

        iframe.full-frame {
            flex: 1;
            display: flex;
            display: -webkit-flex;
            width: 100%;
        }
    </style>
    <template>
        <iframe class="full-frame" src="https://en.wikipedia.org/wiki/Iron_Man" style="display:none;"></iframe>
    </template>
</dom-module>
<script>

    Polymer({

        is: 'iron-man',

        properties: {

        },

        // Element Lifecycle
        ready: function () {
            // `ready` is called after all elements have been configured, but
            // propagates bottom-up. This element's children are ready, but parents
            // are not.
            //
            // This is the point where you should make modifications to the DOM (when
            // necessary), or kick off any processes the element wants to perform.
        },

        attached: function () {
            // `attached` fires once the element and its parents have been inserted
            // into a document.
            //
            // This is a good place to perform any work related to your element's
            // visual state or active behavior (measuring sizes, beginning animations,
            // loading resources, etc).
            var _th = this;

            $('iframe').on('load', function (e) {
                _th.fireElementLoaded();
                this.style.display = "";
            });
        },

        detached: function () {
            // The analog to `attached`, `detached` fires when the element has been
            // removed from a document.
            //
            // Use this to clean up anything you did in `attached`.
        },

        // Element Behavior
        fireElementLoaded: function () {
            this.fire('element-loaded');
        }
    });

</script>